// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wpm.Clinic.Infrastructure;

#nullable disable

namespace Wpm.Clinic.Infrastructure.Migrations
{
    [DbContext(typeof(ClinicDBContext))]
    [Migration("20251016221300_AddDateRange")]
    partial class AddDateRange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("wpm.Clinic.Domain.Entities.Consultation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Consultations");
                });

            modelBuilder.Entity("wpm.Clinic.Domain.Entities.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("wpm.Clinic.Domain.Entities.Consultation", b =>
                {
                    b.OwnsOne("Wpm.Clinic.Domain.ValueObjects.DateTimeRange", "When", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("EndedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("ConsultationId");

                            b1.ToTable("Consultations");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.OwnsOne("Wpm.SharedKernal.ValueObjects.Weight", "CurrentWeight", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ConsultationId");

                            b1.ToTable("Consultations");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.OwnsOne("wpm.Clinic.Domain.ValueObjects.Text", "Diagnosis", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConsultationId");

                            b1.ToTable("Consultations");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.OwnsOne("wpm.Clinic.Domain.ValueObjects.Text", "Treatment", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConsultationId");

                            b1.ToTable("Consultations");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.OwnsMany("wpm.Clinic.Domain.Entities.DrugAdministration", "AdministeredDrugs", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ConsultationId", "Id");

                            b1.ToTable("DrugAdministrations");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");

                            b1.OwnsOne("wpm.Clinic.Domain.ValueObjects.Dose", "Dose", b2 =>
                                {
                                    b2.Property<Guid>("DrugAdministrationConsultationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("DrugAdministrationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Quantity")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<int>("Unit")
                                        .HasColumnType("int");

                                    b2.HasKey("DrugAdministrationConsultationId", "DrugAdministrationId");

                                    b2.ToTable("DrugAdministrations");

                                    b2.WithOwner()
                                        .HasForeignKey("DrugAdministrationConsultationId", "DrugAdministrationId");
                                });

                            b1.OwnsOne("wpm.Clinic.Domain.ValueObjects.DrugId", "DrugId", b2 =>
                                {
                                    b2.Property<Guid>("DrugAdministrationConsultationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("DrugAdministrationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("DrugAdministrationConsultationId", "DrugAdministrationId");

                                    b2.ToTable("DrugAdministrations");

                                    b2.WithOwner()
                                        .HasForeignKey("DrugAdministrationConsultationId", "DrugAdministrationId");
                                });

                            b1.Navigation("Dose")
                                .IsRequired();

                            b1.Navigation("DrugId")
                                .IsRequired();
                        });

                    b.OwnsMany("wpm.Clinic.Domain.ValueObjects.VitalSigns", "VitalSignReadings", b1 =>
                        {
                            b1.Property<Guid>("ConsultationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("HeartRate")
                                .HasColumnType("int");

                            b1.Property<DateTime>("ReadingDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<int>("RespirationRate")
                                .HasColumnType("int");

                            b1.Property<decimal>("Temperature")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ConsultationId", "Id");

                            b1.ToTable("VitalSigns");

                            b1.WithOwner()
                                .HasForeignKey("ConsultationId");
                        });

                    b.Navigation("AdministeredDrugs");

                    b.Navigation("CurrentWeight");

                    b.Navigation("Diagnosis");

                    b.Navigation("Treatment");

                    b.Navigation("VitalSignReadings");

                    b.Navigation("When")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
